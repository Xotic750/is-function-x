{"version":3,"sources":["../src/is-function-x.js"],"names":[],"mappings":"AAAA,OAAO,OAAP,MAAoB,WAApB;AACA,OAAO,SAAP,MAAsB,cAAtB;AACA,OAAO,WAAP,MAAwB,iBAAxB;AACA,OAAO,cAAP,MAA2B,qBAA3B;AACA,OAAO,WAAP,MAAwB,cAAxB;AACA,OAAO,SAAP,MAAsB,mBAAtB;AACA,OAAO,SAAP,MAAsB,oBAAtB;AAEA,IAAM,WAAW,GAAG,OAAO,CAAC,WAA5B;AACA,IAAM,KAAK,GAAG,GAAd;AACA,IAAM,SAAS,GAAG,OAAO,CAAC,QAA1B;AACA,IAAM,OAAO,GAAG,mBAAhB;AACA,IAAM,MAAM,GAAG,4BAAf;AACA,IAAM,QAAQ,GAAG,wBAAjB;AACA,IAAM,KAAK,GAAG,SAAd;IACO,I,GAAQ,K,CAAR,I;AAEP,IAAM,cAAc,GAClB,OAAO,CAAC,SAAS,SAAT,GAAqB;AAC3B;AACA,SAAO,WAAW,CAAC,mCAAD,CAAX,EAAP;AACD,CAHM,CAAP,CAGG,KAHH,KAGa,KAJf;;AAMA,IAAM,eAAe,GAAG,SAAS,eAAT,CAAyB,KAAzB,EAAgC;AACtD,SAAO,IAAI,CAAC,IAAL,CAAU,KAAV,EAAiB,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,IAAV,CAAe,KAAf,CAAD,EAAwB,KAAxB,CAAV,CAA1B,CAAP;AACD,CAFD;;AAIA,IAAM,YAAY,GAAG,SAAS,cAAT,CAAwB,KAAxB,EAA+B;AAClD,MAAM,MAAM,GAAG,OAAO,CAAC,eAAD,EAAkB,KAAlB,CAAtB;AAEA,SAAO,MAAM,CAAC,KAAP,KAAiB,KAAjB,IAA0B,MAAM,CAAC,KAAxC;AACD,CAJD;AAMA;;;;;;;;;;;AASA,IAAM,eAAe,GAAG,SAAS,YAAT,CAAsB,KAAtB,EAA6B,UAA7B,EAAyC;AAC/D,MAAI,cAAc,IAAI,UAAU,KAAK,KAAjC,IAA0C,YAAY,CAAC,KAAD,CAA1D,EAAmE;AACjE,WAAO,KAAP;AACD;;AAED,SAAO,OAAO,CAAC,IAAR,CAAa,KAAb,EAAoB,SAApB,EAA+B,KAA/B,KAAyC,KAAhD;AACD,CAND;;AAQA,IAAM,WAAW,GAAG,SAAS,WAAT,CAAqB,KAArB,EAA4B;AAC9C,MAAM,MAAM,GAAG,WAAW,CAAC,KAAD,CAA1B;AAEA,SAAO,MAAM,KAAK,OAAX,IAAsB,MAAM,KAAK,MAAjC,IAA2C,MAAM,KAAK,QAA7D;AACD,CAJD;AAMA;;;;;;;;;;AAQA,IAAM,UAAU,GAAG,SAAS,UAAT,CAAoB,KAApB,EAA2B,UAA3B,EAAuC;AACxD,MAAI,WAAW,CAAC,KAAD,CAAf,EAAwB;AACtB,WAAO,KAAP;AACD;;AAED,MAAI,cAAJ,EAAoB;AAClB,WAAO,eAAe,CAAC,KAAD,EAAQ,SAAS,CAAC,UAAD,CAAjB,CAAtB;AACD;;AAED,MAAI,cAAc,IAAI,SAAS,CAAC,UAAD,CAAT,KAA0B,KAA5C,IAAqD,YAAY,CAAC,KAAD,CAArE,EAA8E;AAC5E,WAAO,KAAP;AACD;;AAED,SAAO,WAAW,CAAC,KAAD,CAAlB;AACD,CAdD;;AAgBA,eAAe,UAAf","file":"is-function-x.esm.js","sourcesContent":["import attempt from 'attempt-x';\nimport toBoolean from 'to-boolean-x';\nimport toStringTag from 'to-string-tag-x';\nimport hasToStringTag from 'has-to-string-tag-x';\nimport isPrimitive from 'is-primitive';\nimport normalise from 'normalize-space-x';\nimport deComment from 'replace-comments-x';\n\nconst FunctionCtr = attempt.constructor;\nconst SPACE = ' ';\nconst fToString = attempt.toString;\nconst funcTag = '[object Function]';\nconst genTag = '[object GeneratorFunction]';\nconst asyncTag = '[object AsyncFunction]';\nconst ctrRx = /^class /;\nconst {test} = ctrRx;\n\nconst hasNativeClass =\n  attempt(function attemptee() {\n    /* eslint-disable-next-line babel/new-cap */\n    return FunctionCtr('\"use strict\"; return class My {};')();\n  }).threw === false;\n\nconst testClassString = function testClassString(value) {\n  return test.call(ctrRx, normalise(deComment(fToString.call(value), SPACE)));\n};\n\nconst isES6ClassFn = function isES6ClassFunc(value) {\n  const result = attempt(testClassString, value);\n\n  return result.threw === false && result.value;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @private\n * @param {*} value - The value to check.\n * @param {boolean} allowClass - Whether to filter ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n */\nconst tryFuncToString = function funcToString(value, allowClass) {\n  if (hasNativeClass && allowClass === false && isES6ClassFn(value)) {\n    return false;\n  }\n\n  return attempt.call(value, fToString).threw === false;\n};\n\nconst compareTags = function compareTags(value) {\n  const strTag = toStringTag(value);\n\n  return strTag === funcTag || strTag === genTag || strTag === asyncTag;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @param {*} value - The value to check.\n * @param {boolean} [allowClass=false] - Whether to filter ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n */\nconst isFunction = function isFunction(value, allowClass) {\n  if (isPrimitive(value)) {\n    return false;\n  }\n\n  if (hasToStringTag) {\n    return tryFuncToString(value, toBoolean(allowClass));\n  }\n\n  if (hasNativeClass && toBoolean(allowClass) === false && isES6ClassFn(value)) {\n    return false;\n  }\n\n  return compareTags(value);\n};\n\nexport default isFunction;\n"]}